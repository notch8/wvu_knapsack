upstream rails_app {
  server localhost:3000;
}

map $status $loggable {
    ~^444  0;
    default 1;
}

error_log  /var/log/nginx/error.log warn;
#tcp_nopush     on;

real_ip_header X-Forwarded-For;
real_ip_recursive on;

server {
    server_name hykudev.lib.wvu.edu;
    root /app/samvera/hyrax-webapp/public;
    index index.html;

    client_body_in_file_only clean;
    client_body_buffer_size 32K;
    client_max_body_size 0;
    access_log /var/log/nginx/access.log ;
    # if=$loggable;

    sendfile on;
    send_timeout 300s;

    include /etc/nginx/bots.d/ddos.conf;
    include /etc/nginx/bots.d/blockbots.conf;

    location ~ (\.php|\.aspx|\.asp) {
    	return 404;
    }

    # deny requests for files that should never be accessed
    location ~ /\. {
      deny all;
    }

    location ~* ^.+\.(rb|log)$ {
      deny all;
    }

    # serve static (compiled) assets directly if they exist (for rails production)
    location ~ ^/(assets|packs|fonts|images|javascripts|stylesheets|swfs|system)/ {
      try_files $uri @rails;

      # access_log off;
      gzip_static on; # to serve pre-gzipped version

      expires max;
      add_header Cache-Control public;

      # Some browsers still send conditional-GET requests if there's a
      # Last-Modified header or an ETag header even if they haven't
      # reached the expiry date sent in the Expires header.
      add_header Last-Modified "";
      add_header ETag "";
      break;
    }

    # send non-static file requests to the app server
    location / {
      try_files $uri @rails;
    }

    location @rails {
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://rails_app;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/ssl/hykudev_lib_wvu_edu_2024_complete.cer;
    ssl_certificate_key /etc/ssl/private/hykudev.lib.wvu.edu.2024.key;
}



server {
    if ($host = hykudev.lib.wvu.edu) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name hykudev.lib.wvu.edu;
    return 404; # managed by Certbot


}